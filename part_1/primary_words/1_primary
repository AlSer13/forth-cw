: sqr dup * ;
: primary 
  2 ( a 2 )
  1 >r
  repeat
    swap
    dup
    rot dup ( a a i i )
    1 + -rot ( a i+1 a i )
    swap dup rot dup -rot ( a i+1 a i a i )
    sqr ( a i+1 a i a i^2 )
    % not if 
      r> drop 0 >r
    then
    - not
  until
  r>
;
